version: '3'
services:
  mongodb:
    image: mongo
    restart: always
    ports:
      - '27017:27017'
    volumes:
      - mongo-data:/data/db
    networks:
      - appNetwork

  msspeciality:
    build:
      context: ./MSSpeciality
    ports:
      - "8086:8086"
    volumes:
      - ./MSSpeciality:/usr/src/app
    depends_on:
      - elasticsearch
      - fluentd
    networks:
      - appNetwork
  msstrello:
    build:
      context: ./TrelloFake
    ports:
      - "3000:3000"
    volumes:
      - ./TrelloFake:/usr/src/app
    networks:
      - appNetwork

  msauth:
    build:
      context: ./MSAuth
    ports:
      - "8081:8081"
    volumes:
      - ./MSAuth:/usr/src/app
    depends_on:
      - elasticsearch
      - fluentd
    networks:
      - appNetwork
  
  msadmcourtrooms:
    build:
      context: ./MSAdmCourtRooms
    ports:
      - "8087:8087"
    volumes:
      - ./MSAdmCourtRooms:/usr/src/app
    depends_on:
      - elasticsearch
      - fluentd
    networks:
      - appNetwork
  
  msadmoffices:
    build:
      context: ./MSAdmOffices
    ports:
      - "8085:8085"
    volumes:
      - ./MSAdmOffices:/usr/src/app
    networks:
      - appNetwork

  msscheduler:
    build:
      context: ./MSScheduler
    ports:
      - "8090:8090"
    volumes:
      - ./MSScheduler:/usr/src/app
    networks:
      - appNetwork
    
  msusers:
    build:
      context: ./MSUsers
    ports:
      - "8080:8080"
    volumes:
      - ./MSUsers:/usr/src/app
    networks:
      - appNetwork 

  msadmlocalization:
    build:
      context: ./MSAdmLocalization
    ports:
      - "8082:8082"
    volumes:
      - ./MSAdmLocalization:/usr/src/app
    networks:
      - appNetwork

  msprofiles:
    build:
      context: ./MSProfiles
    ports:
      - "8083:8083"
    volumes:
      - ./MSProfiles:/usr/src/app
    networks:
      - appNetwork
    
  mspermissions:
    build:
      context: ./MSPermissions
    ports:
      - "8084:8084"
    volumes:
      - ./MSPermissions:/usr/src/app
    networks:
      - appNetwork
      
  msgateway:
    build:
      context: ./msoxegw
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./msoxegw:/usr/src/app
    networks:
      - appNetwork

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.14.0
    environment:
      - discovery.type=single-node
    ports:
      - "9200:9200"
    networks:
      - appNetwork

  fluentd:
    image: fluent/fluentd:v1.10-1
    volumes:
      - ./fluentd/conf:/fluentd/etc
      - ./fluentd/logs:/fluentd/log
    networks:
      - appNetwork
networks:
  appNetwork:
    driver: bridge

volumes:
  mongo-data:
